{"version":3,"sources":["../public/images sync /^/.//.*$","../public/images/croc1.jpg","../public/images/croc10.jpg","../public/images/croc11.jpg","../public/images/croc12.jpg","../public/images/croc2.jpg","../public/images/croc3.jpg","../public/images/croc4.jpg","../public/images/croc5.jpg","../public/images/croc6.jpg","../public/images/croc7.jpg","../public/images/croc8.jpg","../public/images/croc9.jpg","components/Navbar/navbar.js","components/Jumbotron/Jumbotron.js","components/FriendCard/FriendCard.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["map","./croc1.jpg","./croc10.jpg","./croc11.jpg","./croc12.jpg","./croc2.jpg","./croc3.jpg","./croc4.jpg","./croc5.jpg","./croc6.jpg","./croc7.jpg","./croc8.jpg","./croc9.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","react_default","a","createElement","className","this","props","score","Component","Jumbotron","FriendCard","onClick","imageClick","alt","image","replace","src","require","Footer","App","state","croc","clickedCroc","event","currentCroc","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","fish","_this2","Navbar_navbar","components_Jumbotron_Jumbotron","components_FriendCard_FriendCard","key","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0gBAAA,IAAAA,EAAA,CACAC,cAAA,GACAC,eAAA,GACAC,eAAA,GACAC,eAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAlB,EAAAc,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAAnB,EAAAc,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAtB,IAEAa,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,oBCjCAU,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0LCiBzBC,0LAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACZH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,eAEAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UAAkCC,KAAKC,MAAMC,gBAPlCC,cCONC,SANG,kBACjBR,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wICKaO,SARI,SAAAJ,GAAK,OACtBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,QAASL,EAAMM,YACnCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYS,IAAKP,EAAMQ,MAAMC,QAAQ,OAAQ,IAAKC,IAAKC,MAAQ,KAA4BX,EAAMQ,aCEvGI,SANA,kBACdjB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,2BCgFagB,oNA3EbC,MAAQ,CACNC,OACAC,YAAa,GACbf,MAAO,KAITK,WAAa,SAAAW,GACX,IAAMC,EAAcD,EAAME,OAAOZ,IAE/Ba,EAAKN,MAAME,YAAYK,QAAQH,IAAgB,GAI/CE,EAAKE,SAAS,CACZP,KAAMK,EAAKN,MAAMC,KAAKQ,KAAK,SAAS3B,EAAG4B,GACrC,MAAO,GAAMC,KAAKC,WAEpBV,YAAa,GACbf,MAAO,IAEP0B,MAAM,0BAIRP,EAAKE,SACH,CACEP,KAAMK,EAAKN,MAAMC,KAAKQ,KAAK,SAAS3B,EAAG4B,GACrC,MAAO,GAAMC,KAAKC,WAEpBV,YAAaI,EAAKN,MAAME,YAAYY,OAClCV,GAEFjB,MAAOmB,EAAKN,MAAMb,MAAQ,GAG5B,WAC2B,KAArBmB,EAAKN,MAAMb,QACb0B,MAAM,iBACNP,EAAKE,SAAS,CACZO,KAAMT,EAAKN,MAAMC,KAAKQ,KAAK,SAAS3B,EAAG4B,GACrC,MAAO,GAAMC,KAAKC,WAEpBV,YAAa,GACbf,MAAO,gFASV,IAAA6B,EAAA/B,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,CACE9B,MAAOF,KAAKe,MAAMb,QAEpBN,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZC,KAAKe,MAAMC,KAAKjD,IAAI,SAAAiD,GAAI,OACvBpB,EAAAC,EAAAC,cAACoC,EAAD,CACE3B,WAAYwB,EAAKxB,WACjBzB,GAAIkC,EAAKlC,GACTqD,IAAKnB,EAAKlC,GACV2B,MAAOO,EAAKP,WAIlBb,EAAAC,EAAAC,cAACsC,EAAD,cAvEUjC,cCGEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.db7dc24d.chunk.js","sourcesContent":["var map = {\n\t\"./croc1.jpg\": 20,\n\t\"./croc10.jpg\": 21,\n\t\"./croc11.jpg\": 22,\n\t\"./croc12.jpg\": 23,\n\t\"./croc2.jpg\": 24,\n\t\"./croc3.jpg\": 25,\n\t\"./croc4.jpg\": 26,\n\t\"./croc5.jpg\": 27,\n\t\"./croc6.jpg\": 28,\n\t\"./croc7.jpg\": 29,\n\t\"./croc8.jpg\": 30,\n\t\"./croc9.jpg\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/croc1.0afa2a87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc10.6fbfac5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc11.001ead76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc12.a251bb3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc2.7b53d19b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc3.faa1a358.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc4.4bc589c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc5.f7aa6420.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc6.905e3812.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc7.be89676a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc8.5d997216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/croc9.6bcb6408.jpg\";","import React, { Component } from \"react\";\nimport \"./navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n         <ul>\n          <li className=\"itemLeft\">Clicky Game</li>\n          {/* <li className=\"itemCenter\"></li> */}\n          <li className=\"itemRight\">Score: {this.props.score}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","//sets up the reusable Jumbotron component\nimport React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"header\">\n\t\t<h1>Clicky Game!</h1>\n\t\t<h2>Click on any image to earn a point, but don't click on the same picture more than once. Click all 12 pics, and you win.</h2>\n\t</header>\n);\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./FriendCard.css\";\n\n//pass the image into each card so all 12 are rendered\nconst FriendCard = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img className=\"crocImage\" alt={props.image.replace(\".jpg\", \"\")} src={require(\"../../../public/images/\" + props.image)} />\n    </div>\n  </div>\n);\n\nexport default FriendCard;","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n\t<header className = \"footer\">\n\t\t<p>croc</p>\n\t</header>\n);\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport FriendCard from \"./components/FriendCard/FriendCard\";\nimport Footer from \"./components/Footer/Footer\";\nimport croc from \"./croc.json\";\nimport \"./App.css\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    croc,\n    clickedCroc: [],\n    score: 0\n  };\n\n//when you click on a card ... the image is taken out of the array\n  imageClick = event => {\n    const currentCroc = event.target.alt;\n    const CrocAlreadyClicked =\n      this.state.clickedCroc.indexOf(currentCroc) > -1;\n\n//if you click on a card that has already been selected, the game is reset and cards reordered\n    if (CrocAlreadyClicked) {\n      this.setState({\n        croc: this.state.croc.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedCroc: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available image, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          croc: this.state.croc.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedCroc: this.state.clickedCroc.concat(\n            currentCroc\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 images corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              fish: this.state.croc.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedCroc: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, friendcard, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.croc.map(croc => (\n            <FriendCard\n              imageClick={this.imageClick}\n              id={croc.id}\n              key={croc.id}\n              image={croc.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}